name: Push

on:
  push:
    branches: [develop]
    paths-ignore:
      - '**.md'
      - 'COPYRIGHT'
      - 'LICENSE**'
      - 'Makefile'

jobs:
  push:
    name: Push
    runs-on: ubuntu-latest
    environment: dev
    env:
      ECR_REPOSITORY: thar-be-a-beta-admin
      IMAGE_VERSION: $(cat VERSION)
      SHORT_SHA: $(git rev-parse --short=8 HEAD)
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.US_WEST_2_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.US_WEST_2_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Generate tag
        id: generate-tag
        run: echo "::set-output name=tag::${{ env.IMAGE_VERSION }}-${{ env.SHORT_SHA }}"

      - name: Build and push
        id: container-build
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.generate-tag.outputs.tag }}
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          platforms: linux/amd64
          build-args: IMAGE_VERSION=${{ env.IMAGE_VERSION }}
          push: true
          tags: ${{ env.ECR_REGISTRY}}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
